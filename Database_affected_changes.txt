This changes may affect our database:

# South:
    South is now integrated into django, see
    http://south.readthedocs.org/en/latest/releasenotes/1.0.html#library-migration-path

    An upgrading from old south migrations to django is decribed here:
    https://docs.djangoproject.com/en/1.9/topics/migrations/#upgrading-from-south

    Should be easy. I tested this with mysql and a copy from wl_alpha ... it works
    
    Currently i don't know how to manage the previous south migrations of pybb. In there
    are some tables build from scratch which haven't a model. F.e. pybb_forum_moderators
    Original migration: 
    http://bazaar.launchpad.net/~widelands-dev/widelands-website/trunk/revision/323#pybb/migrations/0001_initial.py
    http://bazaar.launchpad.net/~widelands-dev/widelands-website/trunk/revision/323#pybb/migrations/0002_auto__del_field_topic_post_count.py

# User model
    The current setting in settings.py:

    AUTH_PROFILE_MODULE = 'wlprofile.Profile'

    Has been removed in Django 1.7. The corresponding get_profile() method is gone away with that.
    Re: https://docs.djangoproject.com/en/1.8/releases/1.5/#auth-profile-module
    
    Found a solution for get_profile() but i am unsure with the AUTH_PROFILE_SETTING.

# Django-notifications
    Changing this to pinax-notification the old table do not work anymore.
    Because some tabels are changed it is not possible to get old data back. Restoring old notificationtypes
    is possible if we dump the table notification_noticetype
    $ mysqldump -u widelands -p old_db notification_noticetype > noticetype.db
    and reload it
    
    mysql -u widelands -p new_db < noticetype.db
    
    After that we have to copy the contents from notification_noticetype to notifications_noticetype
    (notice the additional s) and drop the previous reloaded table. This is possible through mysql console:
    
    $ mysql -u widelands -p db_name
    mysql> insert into notifications_noticetype select * from notification_noticetype;
    mysql> drop table notification_noticetype;
    
    Maybe there is an easier way :-)

# threadedcomments
    Maybe we could use django-comments and port the comments to django-comments.
    See: https://django-contrib-comments.readthedocs.org/en/latest/example.html
